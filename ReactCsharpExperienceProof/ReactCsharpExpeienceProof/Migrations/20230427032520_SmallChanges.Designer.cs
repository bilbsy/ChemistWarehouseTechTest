// <auto-generated />
using System;
using ReactCsharpExperienceProof;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ReactCsharpExperienceProof.Migrations
{
    [DbContext(typeof(PizeriaContext))]
    [Migration("20230427032520_SmallChanges")]
    partial class SmallChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReactCsharpExperienceProof.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PizzeriaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PizzeriaId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ReactCsharpExperienceProof.Models.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PizzeriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Toppings")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PizzeriaId");

                    b.ToTable("Pizza");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69d799ff-708b-417b-b780-d9425b135258"),
                            Name = "Capricciosa",
                            PizzeriaId = new Guid("9bdfd915-80f8-4bac-8b7f-ddabda896983"),
                            Price = 20,
                            Toppings = "Cheese,Ham,Mushrooms,Olives"
                        },
                        new
                        {
                            Id = new Guid("69df27ba-5cc8-4ab1-a31f-a69201c16cc3"),
                            Name = "Mexicana",
                            PizzeriaId = new Guid("9bdfd915-80f8-4bac-8b7f-ddabda896983"),
                            Price = 18,
                            Toppings = "Cheese,Salami,Capiscum,Chilli"
                        },
                        new
                        {
                            Id = new Guid("c6acfc08-5055-40c2-a462-d86200b69893"),
                            Name = "Margherita",
                            PizzeriaId = new Guid("9bdfd915-80f8-4bac-8b7f-ddabda896983"),
                            Price = 22,
                            Toppings = "Cheese,Spinach,Ricotta,Cherry Tomatoes"
                        },
                        new
                        {
                            Id = new Guid("80c05c7f-5503-4f32-8818-c574cd9ca679"),
                            Name = "Capricciosa",
                            PizzeriaId = new Guid("7072458c-275b-4e4d-abcd-d440550616a7"),
                            Price = 20,
                            Toppings = "Cheese,Ham,Mushrooms,Olives"
                        },
                        new
                        {
                            Id = new Guid("3f37b269-e113-4bd0-8041-439dedac1006"),
                            Name = "Vegetarian",
                            PizzeriaId = new Guid("7072458c-275b-4e4d-abcd-d440550616a7"),
                            Price = 17,
                            Toppings = "Cheese,Mushrooms,Capiscum,Onion,Olives"
                        });
                });

            modelBuilder.Entity("ReactCsharpExperienceProof.Models.PizzaOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalToppings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzaOrders");
                });

            modelBuilder.Entity("ReactCsharpExperienceProof.Models.Pizzeria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pizzeria");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9bdfd915-80f8-4bac-8b7f-ddabda896983"),
                            Location = "Preston",
                            Name = "Preston Pizzeria"
                        },
                        new
                        {
                            Id = new Guid("7072458c-275b-4e4d-abcd-d440550616a7"),
                            Location = "Southbank",
                            Name = "Southbank Pizzeria"
                        });
                });

            modelBuilder.Entity("ReactCsharpExperienceProof.Models.Order", b =>
                {
                    b.HasOne("ReactCsharpExperienceProof.Models.Pizzeria", "Pizzeria")
                        .WithMany()
                        .HasForeignKey("PizzeriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizzeria");
                });

            modelBuilder.Entity("ReactCsharpExperienceProof.Models.Pizza", b =>
                {
                    b.HasOne("ReactCsharpExperienceProof.Models.Pizzeria", "Pizzeria")
                        .WithMany("Pizzas")
                        .HasForeignKey("PizzeriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizzeria");
                });

            modelBuilder.Entity("ReactCsharpExperienceProof.Models.PizzaOrder", b =>
                {
                    b.HasOne("ReactCsharpExperienceProof.Models.Order", null)
                        .WithMany("PizzaOrders")
                        .HasForeignKey("OrderId");

                    b.HasOne("ReactCsharpExperienceProof.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("ReactCsharpExperienceProof.Models.Order", b =>
                {
                    b.Navigation("PizzaOrders");
                });

            modelBuilder.Entity("ReactCsharpExperienceProof.Models.Pizzeria", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
