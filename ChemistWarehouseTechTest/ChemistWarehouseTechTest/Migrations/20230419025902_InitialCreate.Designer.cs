// <auto-generated />
using System;
using ChemistWarehouseTechTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChemistWarehouseTechTest.Migrations
{
    [DbContext(typeof(CWDbContext))]
    [Migration("20230419025902_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PizzeriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Toppings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PizzeriaId");

                    b.ToTable("Pizza");

                    b.HasData(
                        new
                        {
                            Id = new Guid("031652a7-7d4b-4382-b3f0-8015706367ee"),
                            Name = "Capricciosa",
                            PizzeriaId = new Guid("7190e6de-9842-4e27-9f37-70128c27739f"),
                            Price = 20,
                            Toppings = "Cheese,Ham,Mushrooms,Olives"
                        },
                        new
                        {
                            Id = new Guid("f14c11be-8891-4d76-8e5d-8862765603d5"),
                            Name = "Mexicana",
                            PizzeriaId = new Guid("7190e6de-9842-4e27-9f37-70128c27739f"),
                            Price = 18,
                            Toppings = "Cheese,Salami,Capiscum,Chilli"
                        },
                        new
                        {
                            Id = new Guid("205a2b3a-c312-439a-8156-75748e0903c3"),
                            Name = "Margherita",
                            PizzeriaId = new Guid("7190e6de-9842-4e27-9f37-70128c27739f"),
                            Price = 22,
                            Toppings = "Cheese,Spinach,Ricotta,Cherry Tomatoes"
                        },
                        new
                        {
                            Id = new Guid("ecdfcbac-c119-4b75-b8c5-592dd3f205c2"),
                            Name = "Capricciosa",
                            PizzeriaId = new Guid("9f701bdc-aaf1-441c-9ff5-0497de88da1e"),
                            Price = 20,
                            Toppings = "Cheese,Ham,Mushrooms,Olives"
                        },
                        new
                        {
                            Id = new Guid("3aaeb1cc-9a4c-424b-83ef-b0fbf53259ab"),
                            Name = "Vegetarian",
                            PizzeriaId = new Guid("9f701bdc-aaf1-441c-9ff5-0497de88da1e"),
                            Price = 17,
                            Toppings = "Cheese,Mushrooms,Capiscum,Onion,Olives"
                        });
                });

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.Pizzeria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pizzeria");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7190e6de-9842-4e27-9f37-70128c27739f"),
                            Location = "Preston",
                            Name = "Preston Pizzeria"
                        },
                        new
                        {
                            Id = new Guid("9f701bdc-aaf1-441c-9ff5-0497de88da1e"),
                            Location = "Southbank",
                            Name = "Southbank Pizzeria"
                        });
                });

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.Pizza", b =>
                {
                    b.HasOne("ChemistWarehouseTechTest.Models.Pizzeria", "Pizzeria")
                        .WithMany("Pizzas")
                        .HasForeignKey("PizzeriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizzeria");
                });

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.Pizzeria", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
