// <auto-generated />
using System;
using ChemistWarehouseTechTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChemistWarehouseTechTest.Migrations
{
    [DbContext(typeof(CWDbContext))]
    [Migration("20230430054324_RecurringModelIssue")]
    partial class RecurringModelIssue
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PizzeriaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PizzeriaId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PizzeriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Toppings")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PizzeriaId");

                    b.ToTable("Pizza");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4af5a4a9-4c2a-4e2a-b70e-7b1cd6d22a99"),
                            Name = "Capricciosa",
                            PizzeriaId = new Guid("a611203d-9c43-41d6-b26a-83605217c3ce"),
                            Price = 20,
                            Toppings = "Cheese,Ham,Mushrooms,Olives"
                        },
                        new
                        {
                            Id = new Guid("f88adde4-5378-4521-ab59-34c54598ce2b"),
                            Name = "Mexicana",
                            PizzeriaId = new Guid("a611203d-9c43-41d6-b26a-83605217c3ce"),
                            Price = 18,
                            Toppings = "Cheese,Salami,Capiscum,Chilli"
                        },
                        new
                        {
                            Id = new Guid("1bb899e0-132f-4c8a-b7b0-b0dcf6ff21d0"),
                            Name = "Margherita",
                            PizzeriaId = new Guid("a611203d-9c43-41d6-b26a-83605217c3ce"),
                            Price = 22,
                            Toppings = "Cheese,Spinach,Ricotta,Cherry Tomatoes"
                        },
                        new
                        {
                            Id = new Guid("0cb9b12f-e0d9-4640-a333-9f8c78f37e37"),
                            Name = "Capricciosa",
                            PizzeriaId = new Guid("604040dc-3932-465a-b34f-5e04b866720f"),
                            Price = 20,
                            Toppings = "Cheese,Ham,Mushrooms,Olives"
                        },
                        new
                        {
                            Id = new Guid("f08ebe1d-2d55-4028-8fcb-385617de135a"),
                            Name = "Vegetarian",
                            PizzeriaId = new Guid("604040dc-3932-465a-b34f-5e04b866720f"),
                            Price = 17,
                            Toppings = "Cheese,Mushrooms,Capiscum,Onion,Olives"
                        });
                });

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.PizzaOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalToppings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzaOrders");
                });

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.Pizzeria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pizzeria");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a611203d-9c43-41d6-b26a-83605217c3ce"),
                            Location = "Preston",
                            Name = "Preston Pizzeria"
                        },
                        new
                        {
                            Id = new Guid("604040dc-3932-465a-b34f-5e04b866720f"),
                            Location = "Southbank",
                            Name = "Southbank Pizzeria"
                        });
                });

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.Order", b =>
                {
                    b.HasOne("ChemistWarehouseTechTest.Models.Pizzeria", "Pizzeria")
                        .WithMany()
                        .HasForeignKey("PizzeriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizzeria");
                });

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.Pizza", b =>
                {
                    b.HasOne("ChemistWarehouseTechTest.Models.Pizzeria", "Pizzeria")
                        .WithMany()
                        .HasForeignKey("PizzeriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizzeria");
                });

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.PizzaOrder", b =>
                {
                    b.HasOne("ChemistWarehouseTechTest.Models.Order", null)
                        .WithMany("PizzaOrders")
                        .HasForeignKey("OrderId");

                    b.HasOne("ChemistWarehouseTechTest.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("ChemistWarehouseTechTest.Models.Order", b =>
                {
                    b.Navigation("PizzaOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
